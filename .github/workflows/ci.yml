# .github/workflows/ci.yml

name: Run Python Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # This service runs your PostgreSQL database for tests
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password123
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      # --- FIX: Add this service to run Qdrant for your tests ---
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333

    # I've simplified the strategy to run on one Python version to speed up debugging.
    # You can add "3.12" back later if you wish.
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary
        python -c "with open('back/requirements.txt', 'r', encoding='utf-16') as r, open('back/requirements.clean.txt', 'w') as w: [w.write(line) for line in r if 'pywin32' not in line]"
        pip install -r back/requirements.clean.txt

    - name: Run Pytest
      env:
        DATABASE_URL: postgresql://postgres:password123@localhost:5432/testdb
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        # Your Python code connects to "localhost", which the service port mapping makes available
        QDRANT_HOST: localhost
        QDRANT_PORT: 6333
      run: |
        # Add a small delay to ensure Qdrant service is fully ready
        sleep 10 
        cd back
        python -m pytest